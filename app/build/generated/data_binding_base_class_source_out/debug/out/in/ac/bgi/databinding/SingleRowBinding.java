// Generated by view binder compiler. Do not edit!
package in.ac.bgi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import in.ac.bgi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleRowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView tempEmail;

  @NonNull
  public final TextView tempName;

  @NonNull
  public final TextView tempRollNumber;

  @NonNull
  public final TextView textEmail;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textRollNumber;

  private SingleRowBinding(@NonNull CardView rootView, @NonNull TextView tempEmail,
      @NonNull TextView tempName, @NonNull TextView tempRollNumber, @NonNull TextView textEmail,
      @NonNull TextView textName, @NonNull TextView textRollNumber) {
    this.rootView = rootView;
    this.tempEmail = tempEmail;
    this.tempName = tempName;
    this.tempRollNumber = tempRollNumber;
    this.textEmail = textEmail;
    this.textName = textName;
    this.textRollNumber = textRollNumber;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single__row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.temp_email;
      TextView tempEmail = ViewBindings.findChildViewById(rootView, id);
      if (tempEmail == null) {
        break missingId;
      }

      id = R.id.temp_name;
      TextView tempName = ViewBindings.findChildViewById(rootView, id);
      if (tempName == null) {
        break missingId;
      }

      id = R.id.temp_roll_number;
      TextView tempRollNumber = ViewBindings.findChildViewById(rootView, id);
      if (tempRollNumber == null) {
        break missingId;
      }

      id = R.id.text_email;
      TextView textEmail = ViewBindings.findChildViewById(rootView, id);
      if (textEmail == null) {
        break missingId;
      }

      id = R.id.text_name;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.text_roll_number;
      TextView textRollNumber = ViewBindings.findChildViewById(rootView, id);
      if (textRollNumber == null) {
        break missingId;
      }

      return new SingleRowBinding((CardView) rootView, tempEmail, tempName, tempRollNumber,
          textEmail, textName, textRollNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
